AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  ServerlessChatGPTStream

Parameters:
  OpenaiApiKey:
    Type: String

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30

Resources:
  ChatGPTWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: ChatGPTWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  SendRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ChatGPTWebSocket
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref SendInteg
  SendInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ChatGPTWebSocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - SendRoute
    Properties:
      ApiId: !Ref ChatGPTWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref ChatGPTWebSocket

  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: sendmessage/
      Handler: app.lambda_handler
      MemorySize: 256
      Runtime: python3.9
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - "execute-api:ManageConnections"
              Resource:
                - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ChatGPTWebSocket}/*"
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenaiApiKey
  SendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - ChatGPTWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SendMessageFunction
      Principal: apigateway.amazonaws.com

Outputs:
  ChatGPTWebSocketEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for ServerlessChatGPTStream"
    Value: !Sub "wss://${ChatGPTWebSocket}.execute-api.${AWS::Region}.amazonaws.com/Prod"
